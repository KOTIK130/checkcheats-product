<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å - NURSULTAN</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .admin-container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .admin-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            margin-top: 2rem;
        }
        
        .admin-section {
            background: var(--background-card);
            border-radius: 12px;
            padding: 1.5rem;
            border: 1px solid var(--border-color);
        }
        
        .admin-form {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        
        .form-row {
            display: flex;
            gap: 1rem;
        }
        
        .form-row > * {
            flex: 1;
        }
        
        .generated-key {
            background: var(--background-dark);
            border: 2px solid var(--success-color);
            border-radius: 8px;
            padding: 1rem;
            margin-top: 1rem;
            font-family: 'Courier New', monospace;
            font-size: 1.125rem;
            text-align: center;
            color: var(--success-color);
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="nav-container">
            <a href="/" class="nav-brand">NURSULTAN</a>
            <ul class="nav-menu">
                <li><a href="/" class="nav-link">–ì–ª–∞–≤–Ω–∞—è</a></li>
                <li><a href="/products" class="nav-link">–ü—Ä–æ–¥—É–∫—Ç—ã</a></li>
                <li><a href="/dashboard" class="nav-link">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</a></li>
                <li><a href="/admin" class="nav-link active">–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</a></li>
                <li><a href="#" onclick="logout()" class="nav-link">–í—ã–π—Ç–∏</a></li>
            </ul>
        </div>
    </nav>

    <div class="container">
        <div class="admin-container">
            <div class="dashboard-header">
                <h1 class="dashboard-title">–ê–¥–º–∏–Ω –ü–∞–Ω–µ–ª—å</h1>
                <p style="color: var(--text-secondary);">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –∫–ª—é—á–∞–º–∏</p>
            </div>

            <!-- Statistics -->
            <div class="admin-stats">
                <div class="stat-card">
                    <div class="stat-value"><%= stats.totalUsers %></div>
                    <div class="stat-label">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value"><%= stats.totalKeys %></div>
                    <div class="stat-label">–í—Å–µ–≥–æ –∫–ª—é—á–µ–π</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value"><%= stats.activeKeys %></div>
                    <div class="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª—é—á–µ–π</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value"><%= stats.usedKeys %></div>
                    <div class="stat-label">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö</div>
                </div>
            </div>

            <div class="admin-grid">
                <!-- Generate Key -->
                <div class="admin-section">
                    <h3 style="margin-bottom: 1rem;">üîë –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª—é—á–∞</h3>
                    <form id="generate-key-form" class="admin-form">
                        <select class="form-control" id="key-type" required>
                            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–ª—é—á–∞</option>
                            <option value="30days">30 –¥–Ω–µ–π</option>
                            <option value="90days">90 –¥–Ω–µ–π</option>
                            <option value="180days">180 –¥–Ω–µ–π</option>
                            <option value="365days">365 –¥–Ω–µ–π</option>
                            <option value="lifetime">Lifetime</option>
                        </select>
                        <button type="submit" class="btn-primary">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á</button>
                    </form>
                    <div id="generated-key" style="display: none;"></div>
                </div>

                <!-- Grant Subscription -->
                <div class="admin-section">
                    <h3 style="margin-bottom: 1rem;">üéÅ –í—ã–¥–∞—á–∞ –ø–æ–¥–ø–∏—Å–∫–∏</h3>
                    <form id="grant-subscription-form" class="admin-form">
                        <input type="text" class="form-control" id="grant-uid" placeholder="UID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" required>
                        <input type="number" class="form-control" id="grant-days" placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π" min="1" required>
                        <button type="submit" class="btn-primary">–í—ã–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É</button>
                    </form>
                    <div id="grant-message" class="alert" style="display: none; margin-top: 1rem;"></div>
                </div>

                <!-- Reset HWID -->
                <div class="admin-section">
                    <h3 style="margin-bottom: 1rem;">üñ•Ô∏è –°–±—Ä–æ—Å HWID</h3>
                    <form id="reset-hwid-form" class="admin-form">
                        <input type="text" class="form-control" id="reset-uid" placeholder="UID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" required>
                        <button type="submit" class="btn-primary">–°–±—Ä–æ—Å–∏—Ç—å HWID</button>
                    </form>
                    <div id="reset-message" class="alert" style="display: none; margin-top: 1rem;"></div>
                </div>

                <!-- Find User by UID -->
                <div class="admin-section">
                    <h3 style="margin-bottom: 1rem;">üîç –ù–∞–π—Ç–∏ –ø–æ UID</h3>
                    <form id="find-user-form" class="admin-form">
                        <input type="text" class="form-control" id="search-uid" placeholder="UID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" required>
                        <button type="submit" class="btn-primary">–ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</button>
                    </form>
                    <div id="user-info" style="display: none; margin-top: 1rem;"></div>
                </div>
            </div>

            <!-- Recent Users -->
            <div class="card" style="margin-top: 2rem;">
                <div class="card-header">
                    <h2 class="card-title">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h2>
                </div>
                <div class="table-container">
                    <table>
                        <thead>
                            <tr>
                                <th>UID</th>
                                <th>–õ–æ–≥–∏–Ω</th>
                                <th>Email</th>
                                <th>–ì—Ä—É–ø–ø–∞</th>
                                <th>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</th>
                                <th>–ü–æ–¥–ø–∏—Å–∫–∞ –¥–æ</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% recentUsers.forEach(user => { %>
                            <tr>
                                <td><%= user.uid %></td>
                                <td><%= user.username %></td>
                                <td><%= user.email %></td>
                                <td>
                                    <span class="status-badge <%= user.group === 'Admin' ? 'status-active' : 'status-pending' %>">
                                        <%= user.group %>
                                    </span>
                                </td>
                                <td><%= new Date(user.registrationDate).toLocaleDateString('ru-RU') %></td>
                                <td>
                                    <% if (user.subscriptionExpires) { %>
                                        <%= new Date(user.subscriptionExpires).toLocaleDateString('ru-RU') %>
                                    <% } else { %>
                                        <span style="color: var(--text-secondary);">‚Äî</span>
                                    <% } %>
                                </td>
                            </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Recent Keys -->
            <div class="card" style="margin-top: 2rem;">
                <div class="card-header">
                    <h2 class="card-title">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–ª—é—á–∏</h2>
                </div>
                <div class="table-container">
                    <table>
                        <thead>
                            <tr>
                                <th>–ö–ª—é—á</th>
                                <th>–¢–∏–ø</th>
                                <th>–°—Ç–∞—Ç—É—Å</th>
                                <th>–°–æ–∑–¥–∞–ª</th>
                                <th>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª</th>
                                <th>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% recentKeys.forEach(key => { %>
                            <tr>
                                <td style="font-family: monospace;"><%= key.key %></td>
                                <td><%= key.type %></td>
                                <td>
                                    <span class="status-badge <%= key.status === 'active' ? 'status-active' : key.status === 'used' ? 'status-expired' : 'status-pending' %>">
                                        <%= key.status %>
                                    </span>
                                </td>
                                <td><%= key.createdBy ? key.createdBy.username : '‚Äî' %></td>
                                <td><%= key.usedBy ? key.usedBy.username : '‚Äî' %></td>
                                <td><%= new Date(key.createdAt).toLocaleDateString('ru-RU') %></td>
                            </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Generate Key
        document.getElementById('generate-key-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            const type = document.getElementById('key-type').value;
            
            try {
                const response = await fetch('/api/admin/generate-key', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ type })
                });
                
                const data = await response.json();
                const keyDiv = document.getElementById('generated-key');
                
                if (data.success) {
                    keyDiv.className = 'generated-key';
                    keyDiv.innerHTML = `<strong>–ö–ª—é—á —Å–æ–∑–¥–∞–Ω:</strong><br>${data.key}`;
                    keyDiv.style.display = 'block';
                } else {
                    keyDiv.className = 'alert alert-error';
                    keyDiv.textContent = data.error || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª—é—á–∞';
                    keyDiv.style.display = 'block';
                }
            } catch (error) {
                alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
            }
        });
        
        // Grant Subscription
        document.getElementById('grant-subscription-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            const uid = document.getElementById('grant-uid').value;
            const days = document.getElementById('grant-days').value;
            
            try {
                // First find user by UID
                const findResponse = await fetch(`/api/admin/find-user/${uid}`);
                const findData = await findResponse.json();
                
                if (!findData.success) {
                    const messageDiv = document.getElementById('grant-message');
                    messageDiv.className = 'alert alert-error';
                    messageDiv.textContent = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω';
                    messageDiv.style.display = 'flex';
                    return;
                }
                
                // Grant subscription
                const response = await fetch('/api/admin/grant-subscription', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ userId: findData.user._id, days })
                });
                
                const data = await response.json();
                const messageDiv = document.getElementById('grant-message');
                
                if (data.success) {
                    messageDiv.className = 'alert alert-success';
                    messageDiv.textContent = data.message;
                } else {
                    messageDiv.className = 'alert alert-error';
                    messageDiv.textContent = data.error || '–û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ –ø–æ–¥–ø–∏—Å–∫–∏';
                }
                messageDiv.style.display = 'flex';
            } catch (error) {
                alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
            }
        });
        
        // Reset HWID
        document.getElementById('reset-hwid-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            const uid = document.getElementById('reset-uid').value;
            
            try {
                // First find user by UID
                const findResponse = await fetch(`/api/admin/find-user/${uid}`);
                const findData = await findResponse.json();
                
                if (!findData.success) {
                    const messageDiv = document.getElementById('reset-message');
                    messageDiv.className = 'alert alert-error';
                    messageDiv.textContent = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω';
                    messageDiv.style.display = 'flex';
                    return;
                }
                
                // Reset HWID
                const response = await fetch('/api/admin/reset-hwid', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ userId: findData.user._id })
                });
                
                const data = await response.json();
                const messageDiv = document.getElementById('reset-message');
                
                if (data.success) {
                    messageDiv.className = 'alert alert-success';
                    messageDiv.textContent = data.message;
                } else {
                    messageDiv.className = 'alert alert-error';
                    messageDiv.textContent = data.error || '–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ HWID';
                }
                messageDiv.style.display = 'flex';
            } catch (error) {
                alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
            }
        });
        
        // Find User
        document.getElementById('find-user-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            const uid = document.getElementById('search-uid').value;
            
            try {
                const response = await fetch(`/api/admin/find-user/${uid}`);
                const data = await response.json();
                const infoDiv = document.getElementById('user-info');
                
                if (data.success) {
                    const user = data.user;
                    infoDiv.className = 'info-card';
                    infoDiv.innerHTML = `
                        <div style="margin-bottom: 0.75rem;"><strong>UID:</strong> ${user.uid}</div>
                        <div style="margin-bottom: 0.75rem;"><strong>–õ–æ–≥–∏–Ω:</strong> ${user.username}</div>
                        <div style="margin-bottom: 0.75rem;"><strong>Email:</strong> ${user.email}</div>
                        <div style="margin-bottom: 0.75rem;"><strong>–ì—Ä—É–ø–ø–∞:</strong> ${user.group}</div>
                        <div style="margin-bottom: 0.75rem;"><strong>HWID:</strong> ${user.hwid || '–ù–µ –ø—Ä–∏–≤—è–∑–∞–Ω'}</div>
                        <div style="margin-bottom: 0.75rem;"><strong>–ü–æ–¥–ø–∏—Å–∫–∞ –¥–æ:</strong> ${
                            user.subscriptionExpires 
                            ? new Date(user.subscriptionExpires).toLocaleDateString('ru-RU') 
                            : '–ù–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏'
                        }</div>
                        <div><strong>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:</strong> ${new Date(user.registrationDate).toLocaleDateString('ru-RU')}</div>
                    `;
                } else {
                    infoDiv.className = 'alert alert-error';
                    infoDiv.textContent = data.error || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω';
                }
                infoDiv.style.display = 'block';
            } catch (error) {
                alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
            }
        });
        
        function logout() {
            fetch('/api/auth/logout', { method: 'POST' })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = data.redirect;
                    }
                });
        }
    </script>
</body>
</html>