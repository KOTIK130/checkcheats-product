<%- include('layout') -%>
<div class="row">
    <div class="col-md-12">
        <h1>Admin Panel</h1>
        <button id="genCode" class="btn btn-success mb-3">Generate Session Code</button>
        <div class="card mb-3">
            <div class="card-body">
                <h5>Current Code</h5>
                <input type="text" id="codeInput" class="form-control" placeholder="Enter or generated code" readonly>
                <button id="checkBtn" class="btn btn-primary mt-2">Request Scan</button>
            </div>
        </div>
        <div id="results" class="card">
            <div class="card-header">
                <h5>Scan Results</h5>
            </div>
            <div class="card-body">
                <div id="resultsContent">No results yet.</div>
            </div>
        </div>
        <h2 class="mt-4">Active Sessions</h2>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Code</th>
                    <th>Status</th>
                    <th>Created</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% sessions.forEach(session => { %>
                    <tr>
                        <td><%= session.code %></td>
                        <td><%= session.status %></td>
                        <td><%= new Date(session.created_at).toLocaleString() %></td>
                        <td><button class="btn btn-sm btn-info" onclick="viewResults('<%= session.code %>')">View</button></td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    let currentCode = '';

    document.getElementById('genCode').onclick = async () => {
        try {
            const res = await fetch('/api/generate-code', {
                method: 'POST',
                headers: { 'Authorization': `Bearer ${document.cookie.split('token=')[1]?.split(';')[0] || ''}` },
                credentials: 'include'
            });
            const { code } = await res.json();
            if (code) {
                currentCode = code;
                document.getElementById('codeInput').value = code;
                socket.emit('join-session', { code, type: 'moderator' });
                alert('Code generated: ' + code);
            }
        } catch (err) {
            console.error(err);
            alert('Failed to generate code');
        }
    };

    document.getElementById('checkBtn').onclick = () => {
        const code = document.getElementById('codeInput').value;
        if (!code) return alert('Enter a code first');
        socket.emit('request-scan', code);
    };

    socket.on('receive-results', (data) => {
        const { results } = data;
        const content = document.getElementById('resultsContent');
        if (results && results.length > 0) {
            content.innerHTML = '<ul>' + results.map(r => `<li><strong>${r.file}</strong>: ${r.detected ? 'DETECTED (Cheat!)' : 'Clean'}</li>`).join('') + '</ul>';
        } else {
            content.innerHTML = 'No cheats detected.';
        }
    });

    function viewResults(code) {
        // Fetch from API
        fetch(`/api/sessions/${code}`, {
            headers: { 'Authorization': `Bearer ${document.cookie.split('token=')[1]?.split(';')[0] || ''}` }
        }).then(res => res.json()).then(data => {
            if (data.session.results) {
                const results = JSON.parse(data.session.results);
                // Display similar to above
                alert('Results for ' + code + ': ' + JSON.stringify(results, null, 2));
            }
        });
    }
</script>
